var documenterSearchIndex = {"docs":
[{"location":"#Taxonomy.jl","page":"Home","title":"Taxonomy.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"(Image: Stable) (Image: Dev)","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: CI) (Image: codecov)","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: DOI)","category":"page"},{"location":"","page":"Home","title":"Home","text":"Taxonomy.jl is a julia package to handle NCBI-formatted taxonomic databases.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Now, this package only supports scientific name.","category":"page"},{"location":"#Notes-for-v0.3","page":"Home","title":"Notes for v0.3","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Change the field attributes of the Taxon struct. Now, only the taxid and DB information is stored.\nAdd isless (<) and less-than-or-equals (<= or ≤) comparison for Taxon ranks. See the API document for details.","category":"page"},{"location":"#Notes-for-v0.2","page":"Home","title":"Notes for v0.2","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Moved AbstractTrees.jl v0.3 -> AbstractTrees.jl v0.4, following the breaking changes.\nAdd API document.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Install Taxonomy.jl as follows:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia -e 'using Pkg; Pkg.add(\"Taxonomy\")'","category":"page"},{"location":"#Usage","page":"Home","title":"Usage","text":"","category":"section"},{"location":"#Download-database","page":"Home","title":"Download database","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"First, you need to download taxonomic data from NCBI's servers.","category":"page"},{"location":"","page":"Home","title":"Home","text":"wget ftp://ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump.tar.gz\ntar xzvf taxdump.tar.gz","category":"page"},{"location":"#Create-Taxonomy.DB","page":"Home","title":"Create Taxonomy.DB","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"You can create Taxonomy.DB to store the data.","category":"page"},{"location":"","page":"Home","title":"Home","text":"# Load the package\njulia> using Taxonomy\n\njulia> db = Taxonomy.DB(\"db/nodes.dmp\",\"db/names.dmp\") # Create a Taxonomy.DB objext from the path to each file\n\njulia> db = Taxonomy.DB(\"/your/path/to/db\",\"nodes.dmp\",\"names.dmp\") # Alternatively, create the object from the path to the directory and the name of each files","category":"page"},{"location":"#Taxon","page":"Home","title":"Taxon","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"You can construct a Taxon from its taxonomic identifier and the Taxonomy.DB.","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> human = Taxon(9606, db) # species Homo sapiens\n9606 [species] Homo sapiens\n\njulia> gorilla = Taxon(9593, db) # species Gorilla gorilla\n9593 [species] Gorilla gorilla\n\njulia> bacillus = Taxon(1386,db) # genus Bacillus\n1386 [genus] Bacillus","category":"page"},{"location":"","page":"Home","title":"Home","text":"You can get a variety of information, such as taxid, rank, parent and children by using functions for Taxon.","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> @show human\nhuman = 9606 [species] Homo sapiens\n\njulia> taxid(human)\n9606\n\njulia> name(human)\n\"Homo sapiens\"\n\njulia> rank(human)\n:species\n\njulia> AbstractTrees.parent(human)\n9605 [genus] Homo","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> children(bacillus)\n249-element Array{Taxon,1}:\n 427072 [species] Bacillus chagannorensis\n 904295 [species] Bacillus ginsengisoli\n 1522318 [species] Bacillus kwashiorkori\n 1245522 [species] Bacillus thermophilus\n 1178786 [species] Bacillus thaonhiensis\n 1805474 [species] Bacillus mediterraneensis\n ⋮\n 324768 [species] Bacillus idriensis\n 745819 [species] Bacillus alkalicola\n 170350 [species] Bacillus deramificans\n 1522308 [species] Bacillus niameyensis\n 324767 [species] Bacillus infantis","category":"page"},{"location":"","page":"Home","title":"Home","text":"Also, you can get the lowest common ancestor (LCA) of taxa.","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> lca(human, gorilla)\n207598 [subfamily] Homininae\n\njulia> lca(human, gorilla, bacillus) # You can input as many as you want.\n131567 [no rank] cellular organisms\n\njulia> lca([human, gorilla, bacillus]) # Vector of taxon is also ok.\n131567 [no rank] cellular organisms","category":"page"},{"location":"","page":"Home","title":"Home","text":"Fuctions from AbstractTrees.jl can also be used.","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> homininae = lca(human, gorilla)\njulia> print_tree(homininae)\n207598 [subfamily] Homininae\n├─ 9596 [genus] Pan\n│  ├─ 9597 [species] Pan paniscus\n│  └─ 9598 [species] Pan troglodytes\n│     ├─ 37010 [subspecies] Pan troglodytes schweinfurthii\n│     ├─ 37011 [subspecies] Pan troglodytes troglodytes\n│     ├─ 1294088 [subspecies] Pan troglodytes verus x troglodytes\n│     ├─ 91950 [subspecies] Pan troglodytes vellerosus\n│     ├─ 756884 [subspecies] Pan troglodytes ellioti\n│     └─ 37012 [subspecies] Pan troglodytes verus\n├─ 9605 [genus] Homo\n│  ├─ 9606 [species] Homo sapiens\n│  │  ├─ 63221 [subspecies] Homo sapiens neanderthalensis\n│  │  └─ 741158 [subspecies] Homo sapiens subsp. 'Denisova'\n│  ├─ 1425170 [species] Homo heidelbergensis\n│  └─ 2665952 [no rank] environmental samples\n│     └─ 2665953 [species] Homo sapiens environmental sample\n└─ 9592 [genus] Gorilla\n   ├─ 499232 [species] Gorilla beringei\n   │  ├─ 1159185 [subspecies] Gorilla beringei beringei\n   │  └─ 46359 [subspecies] Gorilla beringei graueri\n   └─ 9593 [species] Gorilla gorilla\n      ├─ 183511 [subspecies] Gorilla gorilla uellensis\n      ├─ 406788 [subspecies] Gorilla gorilla diehli\n      └─ 9595 [subspecies] Gorilla gorilla gorilla","category":"page"},{"location":"#Lineage","page":"Home","title":"Lineage","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Lineage information can be acquired by using Lineage().","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> lineage = Lineage(gorilla)\n32-element Lineage:\n 1 [no rank] root\n 131567 [no rank] cellular organisms\n 2759 [superkingdom] Eukaryota\n 33154 [clade] Opisthokonta\n 33208 [kingdom] Metazoa\n 6072 [clade] Eumetazoa\n 33213 [clade] Bilateria\n ⋮\n 314293 [infraorder] Simiiformes\n 9526 [parvorder] Catarrhini\n 314295 [superfamily] Hominoidea\n 9604 [family] Hominidae\n 207598 [subfamily] Homininae\n 9592 [genus] Gorilla\n 9593 [species] Gorilla gorilla","category":"page"},{"location":"","page":"Home","title":"Home","text":"Struct Lineage stores linage informaction in Vector-like format.","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> lineage[1]\n1 [no rank] root\n\njulia> lineage[9]\n7711 [phylum] Chordata\n\njulia> lineage[end]\n9593 [species] Gorilla gorilla","category":"page"},{"location":"","page":"Home","title":"Home","text":"You can also access a Taxon in the Lineage using Symbol, such as :superkingdom, :family, :genus, :species and etc.(Only Symbols in CanonicalRanks can be used).","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> lineage[:order]\n9443 [order] Primates\n\njulia> lineage[:genus]\n9592 [genus] Gorilla","category":"page"},{"location":"","page":"Home","title":"Home","text":"You can use Between, From, Until, Cols and All selectors in more complex rank selection scenarios.","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> lineage[Between(:order,:genus)]\n8-element Lineage:\n 9443 [order] Primates\n 376913 [suborder] Haplorrhini\n 314293 [infraorder] Simiiformes\n 9526 [parvorder] Catarrhini\n 314295 [superfamily] Hominoidea\n 9604 [family] Hominidae\n 207598 [subfamily] Homininae\n 9592 [genus] Gorilla\n\njulia> lineage[From(:family)]\n4-element Lineage:\n 9604 [family] Hominidae\n 207598 [subfamily] Homininae\n 9592 [genus] Gorilla\n 9593 [species] Gorilla gorilla\n\njulia> lineage[Until(:class)]\n19-element Lineage:\n 1 [no rank] root\n 131567 [no rank] cellular organisms\n 2759 [superkingdom] Eukaryota\n 33154 [clade] Opisthokonta\n 33208 [kingdom] Metazoa\n 6072 [clade] Eumetazoa\n 33213 [clade] Bilateria\n ⋮\n 117570 [clade] Teleostomi\n 117571 [clade] Euteleostomi\n 8287 [superclass] Sarcopterygii\n 1338369 [clade] Dipnotetrapodomorpha\n 32523 [clade] Tetrapoda\n 32524 [clade] Amniota\n 40674 [class] Mammalia","category":"page"},{"location":"","page":"Home","title":"Home","text":"Reformation of the lineage to your ranks can be performed by using reformat().","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> myrank = [:superkingdom, :phylum, :class, :order, :family, :genus, :species]\n\njulia> reformat(lineage, myrank)\n7-element Lineage:\n 2759 [superkingdom] Eukaryota\n 7711 [phylum] Chordata\n 40674 [class] Mammalia\n 9443 [order] Primates\n 9604 [family] Hominidae\n 9592 [genus] Gorilla\n 9593 [species] Gorilla gorilla","category":"page"},{"location":"","page":"Home","title":"Home","text":"If there is no corresponding taxon in the lineage to your ranks, then UnclassifiedTaxon will be stored.","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> uncultured_bacillales = Taxon(157472,db)\n57472 [species] uncultured Bacillales bacterium\n\njulia> reformated = reformat(Lineage(uncultured_bacillales), myrank)\n7-element Lineage:\n 2 [superkingdom] Bacteria\n 1239 [phylum] Firmicutes\n 91061 [class] Bacilli\n 1385 [order] Bacillales\n Unclassified [family] unclassified Bacillales family\n Unclassified [genus] unclassified Bacillales genus\n 157472 [species] uncultured Bacillales bacterium","category":"page"},{"location":"man/api/#API-Reference","page":"API Reference","title":"API Reference","text":"","category":"section"},{"location":"man/api/#Public","page":"API Reference","title":"Public","text":"","category":"section"},{"location":"man/api/","page":"API Reference","title":"API Reference","text":"Modules = [Taxonomy]\nPrivate = false","category":"page"},{"location":"man/api/#Taxonomy.Rank-Tuple{AbstractTaxon}","page":"API Reference","title":"Taxonomy.Rank","text":"Rank(taxon::Taxon)\n\nReturn CanonicalRank made from rank(taxon) if rank(taxon) is in CanonicalRanks. Return UnCanonicalRank(rank) if not. CanonicalRank(taxon) can be used for isless comparison.\n\n\n\n\n\n","category":"method"},{"location":"man/api/#Taxonomy.Rank-Tuple{Symbol}","page":"API Reference","title":"Taxonomy.Rank","text":"Rank(sym::Symbol)\n\nReturn CanonicalRank(sym) if sym is in CanonicalRanks. Return UnCanonicalRank(sym) if not. CanonicalRank(sym) can be used for isless comparison.\n\n\n\n\n\n","category":"method"},{"location":"man/api/#AbstractTrees.children-Tuple{Taxon}","page":"API Reference","title":"AbstractTrees.children","text":"children(taxon::Taxon)\n\nReturn the vector of Taxon objects that are children of the given Taxon object.\n\n\n\n\n\n","category":"method"},{"location":"man/api/#AbstractTrees.isdescendant-Tuple{Taxon, Taxon}","page":"API Reference","title":"AbstractTrees.isdescendant","text":"isdescendant(descendant::Taxon, ancestor::Taxon)\n\nReturn true if the former taxon is a descendant of the latter taxon.\n\n\n\n\n\n","category":"method"},{"location":"man/api/#AbstractTrees.parent-Tuple{Taxon}","page":"API Reference","title":"AbstractTrees.parent","text":"AbstractTrees.parent(taxon::Taxon)\n\nReturn the Taxon object that is the parent of the given Taxon object.\n\n\n\n\n\n","category":"method"},{"location":"man/api/#Base.get-Tuple{Lineage, Union{Int64, Symbol}, Any}","page":"API Reference","title":"Base.get","text":"get(db::Taxonomy.DB, idx::Union{Int,Symbol}, default)\n\nReturn the Taxon object stored for the given taxid or rank (i.e. :phylum), or the given default value if no mapping for the taxid is present.\n\n\n\n\n\n","category":"method"},{"location":"man/api/#Base.get-Tuple{Taxonomy.DB, Int64, Any}","page":"API Reference","title":"Base.get","text":"get(db::Taxonomy.DB, taxid::Int, default)\n\nReturn the Taxon object stored for the given taxid, or the given default value if no mapping for the taxid is present.\n\n\n\n\n\n","category":"method"},{"location":"man/api/#Base.get-Tuple{Taxonomy.DB, String, Any}","page":"API Reference","title":"Base.get","text":"get(db::Taxonomy.DB, name::String, default)\n\nReturn the Taxon object stored for the given name, or the given default value if no mapping for the name is present.\n\n\n\n\n\n","category":"method"},{"location":"man/api/#Taxonomy.isancestor-Tuple{Taxon, Taxon}","page":"API Reference","title":"Taxonomy.isancestor","text":"isancestor(ancestor::Taxon, descendant::Taxon)\n\nReturn true if the former taxon is an ancestor of the latter taxon.\n\n\n\n\n\n","category":"method"},{"location":"man/api/#Taxonomy.lca-Tuple{Vector{Taxon}}","page":"API Reference","title":"Taxonomy.lca","text":"lca(taxa::Vector{Taxon})\nlca(taxa::Taxon...)\n\nReturn the Taxon object that is the lowest common ancestor of the given set of Taxons\n\n\n\n\n\n","category":"method"},{"location":"man/api/#Taxonomy.name-Tuple{UnclassifiedTaxon}","page":"API Reference","title":"Taxonomy.name","text":"name(taxon::AbstractTaxon)\n\nReturn the name of the given Taxon object. It also works for an UnclassifiedTaxon object.\n\n\n\n\n\n","category":"method"},{"location":"man/api/#Taxonomy.print_lineage-Tuple{IO, Lineage}","page":"API Reference","title":"Taxonomy.print_lineage","text":"print_lineage(lineage::Lineage; kwargs...)\nprint_lineage(io::IO, lineage::Lineage; kwargs...)\n\nPrint a formatted representation of the lineage to the given IO object.\n\nArguments\n\ndelim::AbstractString = \";\" - The delimiter between taxon fields.\nfill::Bool = false - If true, prints UnclassifiedTaxon. only availavle when skip is false\nskip::Bool= false- Iftrue, skip printingUnclassifiedTaxon` and delimiter.\n\n\n\n\n\n","category":"method"},{"location":"man/api/#Taxonomy.rank-Tuple{UnclassifiedTaxon}","page":"API Reference","title":"Taxonomy.rank","text":"rank(taxon::AbstractTaxon)\n\nReturn the rank of the given Taxon object. It also works for an UnclassifiedTaxon object.\n\n\n\n\n\n","category":"method"},{"location":"man/api/#Taxonomy.reformat-Tuple{Lineage, Vector{Symbol}}","page":"API Reference","title":"Taxonomy.reformat","text":"reformat(l::Lineage, ranks::Vector{Symbol})\n\nReturn the Lineage object reformatted according to the given ranks.\n\n\n\n\n\n","category":"method"},{"location":"man/api/#Taxonomy.taxid-Tuple{Taxon}","page":"API Reference","title":"Taxonomy.taxid","text":"taxid(taxon::Taxon)\n\nReturn the taxid of the given Taxon object.\n\n\n\n\n\n","category":"method"},{"location":"man/api/#Internal","page":"API Reference","title":"Internal","text":"","category":"section"},{"location":"man/api/","page":"API Reference","title":"API Reference","text":"Modules = [Taxonomy]\nPublic = false","category":"page"},{"location":"man/api/#Taxonomy.DB-Tuple{String, String}","page":"API Reference","title":"Taxonomy.DB","text":"Taxonomy.DB\n\nConstructors\n\nDB(nodes_dmp::String, names_dmp::String)\n\nCreate DB(taxonomy database) object from nodes.dmp and names.dmp files.\n\n\n\n\n\n","category":"method"},{"location":"man/api/#Base.isless-Tuple{CanonicalRank, CanonicalRank}","page":"API Reference","title":"Base.isless","text":"isless(taxon::AbstractTaxon, rank::CanonicalRank)\n\nExample\n\njulia> Taxon(9606 , db) < Rank(:genus)\ntrue\n\nReturn true if the rank of the former Taxon is less than the later rank.\n\n\n\n\n\n","category":"method"},{"location":"man/api/#Taxonomy.namedtuple-Tuple{Lineage}","page":"API Reference","title":"Taxonomy.namedtuple","text":"namedtuple(lineage::Lineage; kwargs...)\n\nReturn a NamedTuple whose filednames is ranks (in the CanonicalRanks) of the lineage.\n\nArguments\n\nfill_by_missing::Bool = false - If true, fills missing instead of UnclassifiedTaxon.\n\n\n\n\n\n","category":"method"}]
}
